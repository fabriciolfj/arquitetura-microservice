server:
  port: 9091


app:
  eureka-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: "http://${app.eureka-server}:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

spring:
  kafka:
    bootstrap-servers: 'localhost:9092'
    consumer:
      #auto-offset-reset: earliest
      group-id: '${spring.application.name}'
  cloud:
    stream:
      binders:
        kafka:
          type: kafka
      bindings:
        input-produto:
          group: '${spring.application.name}'
          binder: kafka
          destination: topic-produto
          consumer:
            maxAttempts: 5
            partitioned: true
      kafka:
        binder:
          brokers: ${spring.kafka.bootstrap-servers}
          health-timeout: 30
          auto-create-topics: true
          auto-add-partitions: true
          producer-properties:
            client.id: inventario-service
        bindings:
          input-produto:
            producer:
              configuration:
                acks: 'all'
                retries: 2147483647
                max.in.flight.requests.per.connection: 1
            consumer:
              configuration:
                key.deserializer: 'org.apache.kafka.common.serialization.StringDeserializer'
  flyway:
    locations:
      - classpath:db/migration
      - classpath:db/testdata
  datasource:
    hikari:
      maximum-pool-size: 5
      minimum-idle: 3
      idle-timeout: 10000
    url: jdbc:mysql://localhost:3306/inventario?createDatabaseIfNotExist=true&serverTimezone=UTC
    username: root
    password: root
# .\bin\windows\kafka-consumer-groups.bat --bootstrap-server localhost:9092 --list
---
spring:
  profiles:
    - docker
server:
  port: 8080

app:
  eureka-server: eureka